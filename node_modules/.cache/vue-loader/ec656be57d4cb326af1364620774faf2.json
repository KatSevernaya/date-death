{"remainingRequest":"C:\\Design\\Проекты\\Test\\test-landing\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Design\\Проекты\\Test\\test-landing\\src\\App.vue?vue&type=style&index=0&id=180a61f2&lang=scss&scope=true","dependencies":[{"path":"C:\\Design\\Проекты\\Test\\test-landing\\src\\App.vue","mtime":1617283067736},{"path":"C:\\Design\\Проекты\\Test\\test-landing\\node_modules\\css-loader\\dist\\cjs.js","mtime":1615449492780},{"path":"C:\\Design\\Проекты\\Test\\test-landing\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1615449495635},{"path":"C:\\Design\\Проекты\\Test\\test-landing\\node_modules\\postcss-loader\\src\\index.js","mtime":1612955768945},{"path":"C:\\Design\\Проекты\\Test\\test-landing\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1615449580018},{"path":"C:\\Design\\Проекты\\Test\\test-landing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615449486492},{"path":"C:\\Design\\Проекты\\Test\\test-landing\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1615449495635}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5ibGFuayB7CiAgIG92ZXJmbG93OiBoaWRkZW47CiAgcG9zaXRpb246IHJlbGF0aXZlOwogCn0KICAuY29udGFpbmVyIHsKICAgIGRpc3BsYXk6IGJsb2NrOwogIH0KCg=="},{"version":3,"sources":["C:\\Design\\Проекты\\Test\\test-landing\\src\\App.vue"],"names":[],"mappings":";AA+LA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;GACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpB;EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB","file":"C:/Design/Проекты/Test/test-landing/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"blank\">\n     <app-progress v-if=\"inProgress\"\n     @stop-progress=\"stopProgress\"\n     ></app-progress>\n    <app-loader v-else-if=\"loading\"></app-loader>\n    <router-view \n    v-else\n      :index=\"index\"\n      :questions=\"questions\"\n      :years=\"years\"\n      :days=\"days\"\n      :show=\"show\"\n      :months=\"months\"\n      :isValid=\"isValid\"\n      :dataFromSwapi=\"dataFromSwapi\"\n      @send-data=\"sendData\"\n      @go-test=\"goTest\"\n      @submit-handler=\"submitHandler\"\n      @answer-choosed=\"answerChoosed\"\n      @birth-date-handler=\"birthDateHandler\"\n    ></router-view>\n  </div>\n  \n</template>\n\n<script>\nimport AppQuize from './components/AppQuize'\nimport AppLastPage from './components/AppLastPage'\nimport AppLanding from './components/AppLanding'\nimport AppLoader from './components/AppLoader'\nimport AppProgress from './components/AppProgress'\n\nexport default {\n  components: { AppQuize, AppLastPage, AppLanding, AppLoader, AppProgress },\n  data() {\n     return {\n         count: 0,\n         index: 4,\n         show: false,\n         isValid: [true, true, true],\n         inProgress: false,\n         loading: false,\n         years: [],\n         days: [],\n         dataFromSwapi: '',\n         months: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\n         questions: [\n            \n             {\n                 question: 'Боитесь ли вы умереть?',\n                 answers: \n                    [ 'Да', 'Нет'],\n                 choosenAnswer: '',\n                 text: \"Вы, конечно, умрете.\\nИ все, с кем вы знакомы,\\nтоже однажды умрут.\"\n                 \n             },\n              {\n                 question: 'Когда Вы чувствуете себя наиболее комфортно?',\n                 answers: \n                    ['Утро','День', 'Вечер', 'Ночь'],\n                 choosenAnswer: '',\n                 text: 'Мы расскажем Вам не только подробности\\n вашей смерти, но также поможем Вам\\n избежать этой ужасной даты и продлить\\n вашу жизнь на многие годы.'\n                 \n              },\n              {\n                 question: 'Укажите свою дату рождения:',\n                 title: 'title',\n                 answers: ['Далее'],\n                 birthDate: [0, 0, 0],\n                 text: 'Уже совсем скоро Вы узнаете много\\n интересного о своем будущем!'\n                 \n              },\n              {\n                 question: 'Снятся ли Вам умершие люди?',\n                 answers: \n                    ['Да','Нет', 'Иногда'],\n                 choosenAnswer: '',\n                 text: 'Смерть родного человека – одно из\\n тяжелейших испытаний в жизни каждого\\n из нас!'\n                 \n              },\n              {\n                 question: 'Запись, которую Вы услышите, может шокировать людей с неокрепшей психикой. Вы готовы узнать, что ждет именно Вас?',\n                 answers: \n                    ['Да','Затрудняюсь ответить'],\n                 choosenAnswer: '',\n                 text1: 'По вам скучает очень близкий человек,\\n которого больше нет в мире живых.',\n                 text2: 'По вам скучает очень близкий человек,\\n которого больше нет в мире живых.\\n Возможно это дедушка или бабушка.',\n                 text3: 'По вам скучает очень близкий человек,\\n которого больше нет в мире живых.\\n Возможно это кто-то из Ваших родителей.'\n\n                 \n              },\n             \n         ]\n     }\n },\n methods: {\n     goTest(idx) {\n         this.questions[this.index].choosenAnswer = this.questions[this.index].answers[idx]\n         this.index = this.index + 1\n         this.$router.push('/quiz')\n     },\n     answerChoosed(idx) {\n        this.questions[this.index].choosenAnswer = this.questions[this.index].answers[idx]\n        if ( this.index + 1 < this.questions.length ) {\n         this.index = this.index + 1\n         console.log(idx)\n        } else {\n           this.inProgress = true\n        }\n\n        if (this.index === 4) {\n            setTimeout(() => {\n                this.show = true\n            }, 1500)\n        }\n     \n\n        \n    },\n    submitHandler($event) {\n        \n          let isValidItem = true\n          for (let i=0; i<3; i++) {\n                if ($event.target[i].value === 'default'){\n                    isValidItem = false\n                } else {\n                    isValidItem = true\n                } \n               this.isValid.splice(i, 1, isValidItem)\n               \n            }\n            let ifTrue = this.isValid.every(elem => elem===true)\n            console.log( this.isValid)\n            \n\n             if ( ifTrue===true ) {\n                 console.log(ifTrue)\n                 this.loading = true\n                 \n                 setTimeout(() => {\n                    \n                    this.index = this.index + 1\n                 this.loading = false\n                }, 1500)\n                \n                   \n             }\n             \n    },\n     birthDateHandler(id, $event){\n            this.questions[2].birthDate.splice($event.target.id, 1, $event.target.value)\n            console.log('hi', this.questions[2].birthDate)\n\n          \n    },\n    async sendData() {\n       const response = await fetch('https://vue-demo-deploy-aa48d-default-rtdb.firebaseio.com/data.json',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          AnswersData: this.questions\n        })\n       })\n       const firebaseData = await response.json()\n       console.log(this.questions)\n\n       const getdata = await fetch('https://swapi.dev/api/people/1/.json',{\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n       })\n      this.dataFromSwapi = await getdata.json()\n      //this.dataFromSwapi = \n      \n       console.log(this.dataFromSwapi.name)\n      \n    },\n\n    stopProgress(  ) {\n       this.inProgress = false\n    }\n    \n }\n}\n</script>\n\n<style lang=\"scss\" scope>\n.blank {\n   overflow: hidden;\n  position: relative;\n \n}\n  .container {\n    display: block;\n  }\n\n</style>\n"]}]}